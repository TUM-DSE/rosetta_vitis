stty: 'standard input': Inappropriate ioctl for device
../src/imageLib/ImageIO.cpp: In function ‘void ReadFileTGA(CByteImage&, const char*)’:
../src/imageLib/ImageIO.cpp:189:18: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
  189 |         grayRamp &&
      |         ~~~~~~~~~^~
  190 |         (h.imageType == TargaRawColormap || h.imageType == TargaRunColormap);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/imageLib/ImageIO.cpp:192:36: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
  192 |         h.imageType == TargaRawRGB && isGray;
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_common.h:641,
                 from /scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed.h:54,
                 from ../src/typedefs.h:15,
                 from ../src/host.cpp:38:
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 32; bool _AP_S = false]’:
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1426:5:   required from ‘ap_private<_AP_W, _AP_S>& ap_private<_AP_W, _AP_S, true>::operator=(const ap_private<_AP_W1, _AP_S1>&) [with int _AP_W1 = 33; bool _AP_S1 = true; int _AP_W = 32; bool _AP_S = false]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:889:13:   required from ‘double ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::to_double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:1024:43:   required from ‘ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::operator double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
../src/host.cpp:235:46:   required from here
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
 2144 |             : (excess_bits ? (((uint64_t)VAL) << (excess_bits)) >> (excess_bits)
      |               ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 2145 |                            : (uint64_t)VAL));
      |                            ~~~~~~~~~~~~~~~~
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 1; bool _AP_S = false]’:
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1647:3:   required from ‘ap_private<_AP_W, _AP_S, true>::ap_private(int) [with int _AP_W = 1; bool _AP_S = false]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1768:12:   required from ‘typename ap_private<_AP_W, _AP_S, true>::RType<1, false>::minus ap_private<_AP_W, _AP_S, true>::operator-() const [with int _AP_W = 32; bool _AP_S = true; typename ap_private<_AP_W, _AP_S, true>::RType<1, false>::minus = ap_private<33, true, true>]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:889:15:   required from ‘double ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::to_double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:1024:43:   required from ‘ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::operator double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
../src/host.cpp:235:46:   required from here
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 32; bool _AP_S = true]’:
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1647:3:   required from ‘ap_private<_AP_W, _AP_S, true>::ap_private(int) [with int _AP_W = 32; bool _AP_S = true]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:7124:1:   required from ‘bool operator!=(const _private_range_ref<_AP_W, _AP_S>&, int) [with int _AP_W = 32; bool _AP_S = false]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:897:57:   required from ‘double ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::to_double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:1024:43:   required from ‘ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::operator double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
../src/host.cpp:235:46:   required from here
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h: In instantiation of ‘void ap_private<_AP_W, _AP_S, true>::clearUnusedBits() volatile [with int _AP_W = 33; bool _AP_S = true]’:
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1649:3:   required from ‘ap_private<_AP_W, _AP_S, true>::ap_private(long int) [with int _AP_W = 33; bool _AP_S = true]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2082:46:   required from ‘typename ap_private<_AP_W, _AP_S, true>::RType<_AP_W2, _AP_S2>::minus ap_private<_AP_W, _AP_S, true>::operator-(const ap_private<_AP_W1, _AP_S1>&) const [with int _AP_W1 = 32; bool _AP_S1 = true; int _AP_W = 1; bool _AP_S = false; typename ap_private<_AP_W, _AP_S, true>::RType<_AP_W2, _AP_S2>::minus = ap_private<33, true, true>]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:1768:36:   required from ‘typename ap_private<_AP_W, _AP_S, true>::RType<1, false>::minus ap_private<_AP_W, _AP_S, true>::operator-() const [with int _AP_W = 32; bool _AP_S = true; typename ap_private<_AP_W, _AP_S, true>::RType<1, false>::minus = ap_private<33, true, true>]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:889:15:   required from ‘double ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::to_double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
/scratch/unsafe/Xilinx/Vivado/2020.2/include/ap_fixed_base.h:1024:43:   required from ‘ap_fixed_base<_AP_W, _AP_I, _AP_S, _AP_Q, _AP_O, _AP_N>::operator double() const [with int _AP_W = 32; int _AP_I = 13; bool _AP_S = true; ap_q_mode _AP_Q = AP_TRN; ap_o_mode _AP_O = AP_WRAP; int _AP_N = 0]’
../src/host.cpp:235:46:   required from here
/scratch/unsafe/Xilinx/Vivado/2020.2/include/etc/ap_private.h:2144:28: warning: enum constant in boolean context [-Wint-in-bool-context]
ERROR: 'parted' command not exist. Please make sure 'parted' command path is in $PATH variable 
make: *** [Makefile:31: package/sd_card.img] Error 1
